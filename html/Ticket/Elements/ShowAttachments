%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2018 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<&| /Widgets/TitleBox, title => loc('Attachments'), 
		title_class=> 'inverse',  
		class => 'ticket-info-attachments',
		color => "#336699",
		hide_chrome => $HideTitleBox &>

% $m->callback( %ARGS, CallbackName => 'BeforeList', TicketObj => $Ticket, Attachments => $Attachments, Documents => \%documents, IsChecked => \%is_checked, ShowMore => \$show_more );

<table id="attachments" class="display nowrap" width="100%">
	<thead>
		<tr>
			<th><&|/l&>Category</&></th>
			<th><&|/l&>Filename</&></th>
			<th><&|/l&>Date</&></th>
			<th><&|/l&>User</&></th>
			<th><&|/l&>Size</&></th>
			<th><&|/l&>Node</&></th>
			<th><&|/l&>Comment</&></th>
		</tr>
	</thead>

	<tfoot>
		<tr>
			<th><&|/l&>Category</&></th>
			<th><&|/l&>Filename</&></th>
			<th><&|/l&>Date</&></th>
			<th><&|/l&>User</&></th>
			<th><&|/l&>Size</&></th>
			<th><&|/l&>Node</&></th>
			<th><&|/l&>Comment</&></th>
		</tr>
	</tfoot>

</table>


<script src="<%$RT::WebPath%>/NoAuth/js/jquery.dataTables.min.js" type="text/javascript"></script>
<script src="<%$RT::WebPath%>/NoAuth/js/file-size.js" type="text/javascript"></script>
<!-- <script src="<%$RT::WebPath%>/NoAuth/js/datetime-moment.js" type="text/javascript"></script> -->
<script src="<%RT->Config->Get('WebPath')%>/NoAuth/js/dataTables.responsive.min.js" type="text/javascript"></script>

<script type="text/javascript">

	var colors = <%to_json(\%colormap, {canonical=>1})|n%>;
	var dt, result;
	var bShowHide = false;

	jQuery(function ($) {
		$(document).ready( function () {

			function formatResult(node) {
				var $result = $('<span title="' + node.lib  + '" style="padding-left:' + (20 * (node.level-1)) + 'px;">' + '<img src="<%RT->Config->Get('WebPath')%>/static/images/icons8-folder-16.png"> ' + node.text + '</span>');
				return $result;
			};

			result = $.ajax({
				type: "POST",
				url: "<%RT->Config->Get('WebPath')%>/Ajax/LoadAttachments.json",
				data: { 'ticketId': '<%$Ticket->Id%>' },
				success: function(data) {
					dt = $('#attachments').DataTable({
						language: {
							processing:     "Feldolgozás...",
							search:         "Keresés:",
							lengthMenu:    "_MENU_ találat oldalanként",
							info:           "Találatok: _START_ - _END_ Összesen: _TOTAL_",
							infoEmpty:      "Nulla találat",
							infoFiltered:   "(_MAX_ összes rekord közül szűrve)",
							infoPostFix:    "",
							loadingRecords: "Betöltés....",
							zeroRecords:    "Nincs a keresésnek megfelelő találat",
							emptyTable:     "A táblázatban nem állnak rendelkezésre adatok",
							paginate: {
								first:      "Első",
								previous:   "Előző",
								next:       "Következő",
								last:       "Utolsó"
							},
							aria: {
								sortAscending:  ": aktiválja a növekvő rendezéshez",
								sortDescending: ": aktiválja a csökkenő rendezéshez"
							},
							select: {
								rows: {
									"_": "%d sor kiválasztva",
									"0": "",
									"1": "1 sor kiválasztva"
								}
							},
							buttons: {
								print: "Nyomtatás",
								colvis: "Oszlopok",
								copy: "Másolás",
								copyTitle: "Vágólapra másolás",
								copySuccess: {
									"_": "%d sor másolva",
									"1": "1 sor másolva"
								}
							}
						},
						pageLength: 100,
						lengthMenu: [ [10, 25, 50, 100, -1], [10, 25, 50, 100, "<&|/l&>All</&>"] ],
						dom: 'Bl<"toolbar">frtip',
						initComplete: function() {
							$("div.toolbar").html('<label><input id="showhide" name="showhide" type="checkbox" value="1" onclick="hiddenShowHide( this.checked ); console.log( \'check box \' + this.checked); return true;"><&|/l&>Show hidden files</&></label>');
							//$("div.toolbar").css( 'margin-top', '3px' );
							$("div.toolbar").css( 'display', 'inline-block' );
						},
						data: data.attachments,
						drawCallback: function( row, dataIndex ) {
							$('.selectnode').select2({
								placeholder: '<&|/l&>Select an option</&>',
								width: "230px",
								data: data.folders,
								formatSelection: function(item) {
									return item.text
								},
								formatResult: function(item) {
									return item.text
								},
								templateResult: formatResult,
								dropdownCssClass : 'bigdrop',
								dropdownAutoWidth : true
							});
						},
						createdRow: function( row, data, dataIndex ) {
							if (data['category'] != 'X') {
								$(row).css( 'background-color', colors[data['category']] );
							};
							if ( (data['category'] == "hidden" ) && ( $('#showhide').val() != '1') ) {
								$(row).hide();
							}
						},
		                columns: [
		                    { "data":"category",
								"fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
									var rgroup = "";
									for (var key in colors) {
										rgroup += "<label class='container'>";
										rgroup += "<input type='radio' onchange='setCategory(" + iRow + ","  + iCol + ", this.name, this.value);' name='rad" + oData.attid + "' id='rad-" + oData.attid + "-" + key + "' value='" + key +"'";
										rgroup += (key == sData)?" checked":"";
										rgroup += ">";
										rgroup += "<span class='checkmark' style='background-color: " + colors[key] + "'></span>";
										rgroup += "</label>";
										// rgroup += "<div style='width:15px; height:15px; padding-right:3px; " + colors[key] + "'></div>";
									}
									//&#x2612;
									rgroup += "<span id='del" + oData.attid + "' style='position:absolute; width:21px; height:20px; border:1px solid; border-radius:3px; background-color:#eee; text-align:center; line-height:20px; cursor:pointer;' onclick='delCategory("+iRow+", this.id); return true;'>X</span>";
									rgroup += "";
									$(nTd).html( rgroup );
								}
		                    },
		                    { "data":"filename" },
		                    { "data":"date_unix",
								"fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
									$(nTd).text( oData.date );
								}
	                    	},

		                    { "data":"creator" },
		                    { "data":"size" },
		                    { "data":"node" ,
								"fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
									$(nTd).html( "<select class='selectnode' id='sel-" + oData.attid + "' onchange='setFolder(this.id, this.value);'><option></option></select>" );
								}
							},
		                    { "data":"comment",
		                    	"fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
									$(nTd).html( "<input style='border-style:none; padding: 5px;' id=comm-" + oData.attid + " type='text' onfocusout='saveComment(this.id, this.value);' value='" + sData + "' disabled>&nbsp;<img style='cursor:pointer; padding-left: 5px;' onclick='editComment( \"comm-"+oData.attid+"\" );' src=\"<%RT->Config->Get('WebPath')%>/static/images/pencil-icon.png\">" );
								}
		                    }
		                ],
						columnDefs: [
							{ type: 'file-size', targets: 4 }
						],
		                order: [ 2, 'asc' ],
					});
				}
			}).then(function (data) {
				$('.selectnode').each(function() {
					for (var i = 0; i < data.attachments.length; i++){
						if ( this.id == "sel-" + data.attachments[i].attid ) {
							$("#"+this.id).val(data.attachments[i].node);
							$("#"+this.id).trigger('change');
						}
					}
				});
			});
		});
    });

	function setCategory( row, cell, radio, value ) {
		//dt.cell({row:row, column:0}).data(value);
		jQuery(dt.row(row).node()).css( 'background-color', colors[value] );
		if (value == 'hidden') {
			if (!jQuery("#showhide").is(":checked")) {
				jQuery(dt.row(row).node()).hide();	
			}
		};
		jQuery.ajax({
			type: 'POST',
			url: '<%RT->Config->Get('WebPath')%>/Ajax/AjaxModifyCategory',
			data: {
				'Value' : value,
				'attachId' : radio.replace("rad", ""),
			}
		});
	};

	function delCategory( row, radio ) {
		//dt.cell({row:row, column:0}).data(value);
		
		jQuery.ajax({
			type: 'POST',
			url: '<%RT->Config->Get('WebPath')%>/Ajax/AjaxDeleteCategory',
			data: {
				'attachId'	: radio.replace("del", ""),
			},
			success:function(){
				var r = radio.replace("del", "rad-")
				jQuery("[id^="+r+"]").attr('checked', false);
				jQuery(dt.row(row).node()).css( 'background-color', '' );
				console.log(row, r, radio);
			}
		});
	};

	function setFolder( attID, node ) {
		jQuery.ajax({
			type: 'POST',
			url: '<%RT->Config->Get('WebPath')%>/Ajax/AjaxModifyFolder',
			data: {
				'Value' : node,
				'attachId' : attID.replace("sel-", "")
			}
		});
	}

	function hiddenShowHide( checked ) {
		dt.rows().every( function ( index ) {
			if (checked) {
				if (!jQuery(dt.row(index).node()).is(':visible')){
					jQuery(dt.row(index).node()).show();
				}
			} else {
				if (jQuery( dt.row(index).node() ).find("input[name^='rad']:checked").val() == 'hidden') {
					jQuery(dt.row(index).node()).hide();
				}
			}
		});
	}

	function editComment( editID ) {
		jQuery( "#"+editID ).prop( "disabled", false ).focus();
	}

	function saveComment ( editID, editVal ) {
		jQuery( "#"+editID ).prop( "disabled", true );
		jQuery.ajax({
			type: 'POST',
			url: '<%RT->Config->Get('WebPath')%>/Ajax/AjaxModifyComment',
			data: {
				'Value' : editVal,
				'attachId' : editID.replace("comm-", "")
			}
		});
	}

</script>

</&>

<%INIT>
use utf8;
use JSON;

# If we haven't been passed in an Attachments object (through the precaching mechanism)
# then we need to find one
$Attachments ||= $Ticket->Attachments;

# Avoid applying limits to this collection that may be used elsewhere
# (e.g. transaction display)
$Attachments = $Attachments->Clone;

# Remember, each message in a transaction is an attachment; we only
# want named attachments (real files)
$Attachments->LimitHasFilename;

my $show_more = 0;
my %documents;
my %colormap = RT->Config->Get('AttachmentCategories');

# show newest first
$Attachments->OrderByCols(
	{ FIELD => 'Created', ORDER => 'DESC' },
	{ FIELD => 'id',      ORDER => 'DESC' },
);

while ( my $attach = $Attachments->Next() ) {
   # display "show more" only when there will be more attachments
   if (defined($Count) && --$Count < 0) {
	   $show_more = 1;
	   last;
   }
   push @{ $documents{ $attach->Filename } }, $attach;
}

my %is_checked = map { $_ => 1 } @Checked;

return if !$show_more && keys %documents == 0;
</%INIT>
<%ARGS>
$Ticket => undef
$Attachments => undef
$DisplayPath => $session{'CurrentUser'}->Privileged ? 'Ticket' : 'SelfService'
$HideTitleBox => 0
$Selectable => 0
$Count => undef
@Checked => ()
</%ARGS>

